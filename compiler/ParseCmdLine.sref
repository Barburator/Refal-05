//FROM LibraryEx
$EXTERN Apply;


$EENUM CmdLineError, CompileList, CmdNone;

/**
  <ParseCommandLine e.Arguments>
    == t.CommandLineInfo CompileList (e.Folders) t.FoundedFile*
    == (CmdLineError e.Message)

  t.FoundedFile ::= (e.FileName)
*/
$ENTRY ParseCommandLine {
  e.Arguments =
    <DoParseCommandLine
      <CollectorObject (/* folders */) /* files */> e.Arguments
    >;
}

/**
  <CmdCompileCommand t.CommandLineInfo>
    == CmdNone
    == e.Command
*/
$ENTRY CmdCompileCommand {
  t.CommandLineInfo = <Apply t.CommandLineInfo CmdCompileCommand>;
}

$ENUM CAddCompileCommand, CAddErrorFile, CGetInfo, CAddFile, CAddFolder,
  CSetOutput;

DoParseCommandLine {
  t.Collector ('-c') (e.CompileCommand) e.Arguments =
    <DoParseCommandLine
      <Apply t.Collector CAddCompileCommand e.CompileCommand> e.Arguments
    >;

  t.Collector ('-c') =
    (CmdLineError 'After option ''-c'' expected C++ compiler command line');

  t.Collector ('-d') (e.Directory) e.Arguments =
    <DoParseCommandLine
      <Apply t.Collector CAddFolder e.Directory> e.Arguments
    >;

  t.Collector ('-d') =
    (CmdLineError 'After option ''-d'' expected find directory');

  t.Collector ('-o') (e.OutputFile) e.Arguments =
    <DoParseCommandLine
      <Apply t.Collector CSetOutput e.OutputFile> e.Arguments
    >;

  t.Collector ('--') e.Arguments =
    <DoParseFileNamesOnly
      t.Collector e.Arguments
    >;

  t.Collector (e.NextFileName) e.Arguments =
    <DoParseCommandLine
      <Apply t.Collector CAddFile e.NextFileName> e.Arguments
    >;

  t.Collector = <Apply t.Collector CGetInfo>;
}

DoParseFileNamesOnly {
  t.Collector (e.NextFileName) e.Files =
    <DoParseFileNamesOnly
      <Apply t.Collector CAddFile e.NextFileName> e.Files
    >;

  t.Collector = <Apply t.Collector CGetInfo>;
}

//------------------------------------------------------------------------------

CollectorObject {
  (e.Folders) e.Files =
    (CollectorObject-VTable (e.Folders) (e.Files));
}

CollectorObject-VTable {
  (e.Folders) (e.Files) CAddCompileCommand e.Command =
    <Collector-Compiler (e.Folders) (e.Files) e.Command>;

  (e.Folders) (e.Files) CAddFile e.FileName =
    <CollectorObject (e.Folders) e.Files (e.FileName)>;

  (e.Folders) (e.Files) CAddFolder e.FolderName =
    <CollectorObject (e.Folders (e.FolderName)) e.Files>;

  (e.Folders) (e.Files) CGetInfo =
    CmdCompileCommand-None CompileList (e.Folders) e.Files;
}

CmdCompileCommand-None {
  CmdCompileCommand = CmdNone;
}

Collector-Compiler {
  (e.Folders) (e.Files) e.Command =
    (Collector-Compiler-VTable (e.Folders) (e.Files) (e.Command));
}

Collector-Compiler-VTable {
  (e.Folders) (e.Files) (e.Command) CAddCompileCommand e.NewCommand =
    <Collector-Error-CC>;

  (e.Folders) (e.Files) (e.Command) CAddFile e.FileName =
    <Collector-Compiler
      (e.Folders) (e.Files (e.FileName)) e.Command
    >;

  (e.Folders) (e.Files) (e.Command) CAddFolder e.FolderName =
    <Collector-Compiler
      (e.Folders (e.FolderName)) (e.Files) e.Command
    >;

  (e.Folders) (e.Files) (e.Command) CGetInfo =
    (CmdCompileCommand-Command e.Command)
    CompileList (e.Folders) e.Files;
}

CmdCompileCommand-Command {
  e.Command CmdCompileCommand = e.Command;
}

Collector-Error-CC {
  = <Collector-Error 'Multiple declaration of C++ compiler command line'>;
}

Collector-Error {
  e.Message =
    (Collector-Error-VTable (e.Message));
}

Collector-Error-VTable {
  (e.Message) CAddCompileCommand e.Command = <Collector-Error e.Message>;

  (e.Message) CAddFile e.FileName = <Collector-Error e.Message>;

  (e.Message) CAddFolder e.FolderName = <Collector-Error e.Message>;

  (e.Message) CGetInfo (e.Folders) e.Files = (CmdLineError e.Message);
}
